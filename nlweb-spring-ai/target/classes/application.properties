# Playwright MCP Service Configuration
playwright.mcp.sse.url=http://playwright-mcp:8931/sse

# NLWeb Service (Conceptual)
nlweb.service.url=http://nlweb:8000/ask

# Spring AI OpenAI Configuration (placeholders, ensure these are set in your environment or a secure config)
# The actual OPENAI_API_KEY will be primarily used by the NLWeb service, 
# but if the Spring AI app directly uses OpenAI features, it would need it too.
# For this setup, we assume NLWeb handles the core LLM interaction.
spring.ai.openai.api-key=${OPENAI_API_KEY:YOUR_OPENAI_API_KEY_FALLBACK}
spring.ai.openai.chat.options.model=gpt-4o
# spring.ai.openai.chat.options.temperature=0.7
# spring.ai.openai.chat.options.max-tokens=800

logging.level.com.example.nlwebspringai=INFO
logging.level.org.springframework.web.reactive.function.client=INFO
logging.level.reactor.netty.http.client=INFO
logging.level.org.springframework.ai=INFO

# For debugging specific components if needed:
# logging.level.com.example.nlwebspringai.client=DEBUG
# logging.level.com.example.nlwebspringai.service.OrchestrationService=DEBUG
# logging.level.com.example.nlwebspringai.mcp.client=DEBUG
# logging.level.com.example.nlwebspringai.mcp.service=DEBUG
